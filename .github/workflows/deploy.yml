name: Continuous Deployment Pipeline

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - 'pom.xml'
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/posts
  AZURE_DNS_PREFIX: posts-${{ secrets.DOCKERHUB_USERNAME }}

permissions:
  id-token: write
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify POM location
        run: |
          echo "Contenido del directorio:"
          ls -la
          if [ ! -f "pom.xml" ]; then
            echo "ERROR: pom.xml no encontrado!"
            exit 1
          fi

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Run tests
        run: mvn -B test

      - name: Extract version
        id: version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          mvn -B spring-boot:build-image \
            -DskipTests \
            -Dspring-boot.build-image.imageName=${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy-to-azure:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Instances
        run: |
          az container create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name posts \
            --image ${{ env.DOCKER_IMAGE }}:${{ needs.build-and-test.outputs.version }} \
            --registry-login-server index.docker.io \
            --registry-username ${{ secrets.DOCKERHUB_USERNAME }} \
            --registry-password ${{ secrets.DOCKERHUB_READ_TOKEN }} \
            --dns-name-label ${{ env.AZURE_DNS_PREFIX }} \
            --ports 8080 \
            --os-type Linux \
            --cpu 1 \
            --memory 1.5

      - name: Get public URL
        run: |
          az container show \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name posts \
            --query "ipAddress.fqdn" \
            --output tsv